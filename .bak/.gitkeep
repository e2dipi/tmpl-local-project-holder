# Project's backups

<div style="
    font-size: normal;
    margin: 0 15% 5ex 10%;
    min-width: 38em; max-width: 43em;"
>
<div style="font-size: 95%; text-align: justify;">

!!!Abstract
    *This directory hosts the project's **`archives`** and **`backups`**, which range from the
    near-realtime backups to the project's releases' arhives. Temporary backups made by users
    should also be stored here, directly at the root of the folder. Note that this folder's content is
    subject to the archives' naming scheme described in
    ["Handling Archive"](/admin/guidelines/handling-archives/handling-archives.md).*

</div>
</div>

<!-- @import "[TOC]" {cmd="toc" depthFrom=2 depthTo=6 orderedList=false} -->
<details open style="margin: 14pt 0pt 24pt 10pt">
<summary style="margin-left: -8pt; font-weight: bold; font-size: larger; font-variant: small-caps">
<span style="margin-left: 3pt">Table of contents<span></summary>

<!-- code_chunk_output -->

- [Overview](#overview)
- [The *root* folder](#the-root-folder)
- [The *.history* folder](#the-history-folder)
- [The *archives* folder](#the-archives-folder)

<!-- /code_chunk_output -->

</details>

## Overview

This folder hosts the *project's backups*. At its root are the *temporary backups* made by the user,
which should be deleted or moved wherever they belong on a regular basis. Structured backups are
stored in subfolders. The folder's structure is as follows:

<div style="min-width: 45em; font-size: normal;margin: 0 10% 5ex 5%;"
>

```text
  .                                                   .BAK FOLDER
  |                                                   ´´´´´´´´´´´
  ├── .history                                         # Continous backups
  |   └── ...                                            # Hanled by Local-History
  |
  ├── archives                                         # Archives and backups  must comply
  |   ├── <pref>~<desciption>[~<suff>]~<vers|tag>.zip    with a naming-scheme that involves
  |   └── ...                                            a prefix from a predefined set, a
  |                                                      descriptive name, a suffix that is
  ├── <pref>~<desciption>[~<suff>]~<tag|date> zip        optional and a tag/version from the
  └── ...                                                the commit tree or a date as yymmdd.
```

</div>

As the above suggests, file names are subject to a naming scheme that one is strongly encouraged
to follow. The conventions it is based on are discussed in details in a dedicated document.

<div style="
    font-size: normal;
    margin: 0 15% 5ex 10%;
    min-width: 38em; max-width: 43em;"
>
<div style="font-size: 95%; text-align: justify;">

!!!Tip
    <div style="margin: 2ex 0 2ex 0">
        The naming scheme to use for *archives* is discussed in the following document:<br/>
        <div style="text-align: center">
        <a href="/admin/guidelines/handling-archives/handling-archives.md">
            Handling Archive
        </a>

</div></div>
</div></div>

## The *root* folder

The `root` folder hosts the project's (temporary) *backups* that are made by the user. They are
typically made when the user is about to perform a risky operation such as a major refactoring, a
major update, wants to try something out etc. and wants to be able to revert to the current state of
the project if something goes wrong. Another typical use case is wanting to keep a copy of part of
the project's code in order to reuse it in another project, or to keep a piece of code that is about to
be deleted but that may be useful later on.

<div style="
    font-size: normal;
    margin: 0 15% 5ex 10%;
    min-width: 38em; max-width: 43em;"
>
<div style="font-size: 95%; text-align: justify;">

!!!Tip Subprojects' archives
    For projects that contain subprojects, it is more practical to let each of them have its own
    *backup folder* and, thus, its own `archives` folder as well. According to the above convention,
    the content of the latter should then be copied here. A better alternative is to define the
    subproject's `archives` folder as a *junction* pointing to this folder.

</div>
</div>

*Backups* are named and dated according to according to the archives' naming scheme discussed
in the [handling archives](../admin/guidelines/handling-archives/handling-archives.md)
to be found in the *guidelines* hosted by the `admin` environment. These files are meant to be
temporary, which actually is the main motivation for storing them at the root of the `.bak` folder:
doing so makes them easily accessible and visible, which is a good way to remind the user to check
whether they are still needed or not on a regular basis.

## The *.history* folder

This folder hosts the project's near-realtime backups performed by the
[Local History](https://marketplace.visualstudio.com/items?itemName=xyz.local-history)
extension. As it is fully handled by the extension, the user should noneithert manually modify its
content, nor delete it.

Browsing its content directly is not recommended either, as it is not meant to be
human-readable. Instead, the user should use the extension's interface that is available through
VSCode's *Activity Bar*.

Preferences for the extension such as the backup's frequency, the number of backups to keep, etc.
can be configured in the project's `settings.json` file. The location of the `.history` folder can also be
changed, but it is not recommended to do so.

Additional information about the extension can be found on its
[marketplace page](https://marketplace.visualstudio.com/items?itemName=xyz.local-history).

## The *archives* folder

This folder hosts the project's *archives*, which essentially consist of backups of the project's
releases. Note that this folder also contains the archives of every subproject that the project may
contain. It hosts two types of archives: *public archives* that are meant to be distributed to the
public, and *private archives* which contain additional information such as uncompiled/minified
sources and are meant to be kept private.
